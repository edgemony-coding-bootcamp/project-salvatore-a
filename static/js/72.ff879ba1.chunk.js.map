{"version":3,"file":"static/js/72.ff879ba1.chunk.js","mappings":"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","sources":["assets/avatars.js","webpack://edgeflix/./src/components/AccessForm/AccessForm.module.scss?8b2e","components/AccessForm/index.jsx","components/AccessForm/AccessForm.jsx","webpack://edgeflix/./src/components/Overlay/Overlay.module.scss?4844","components/Overlay/index.jsx","components/Overlay/Overlay.jsx","webpack://edgeflix/./src/pages/Signin/Signin.module.scss?e86f","pages/Signin/index.jsx","pages/Signin/Signin.jsx"],"sourcesContent":["export const avatars = [\n    \"https://occ-0-3092-2581.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABVXPTTvsd2xi4o0OCh5RuMYTUnlwAERLP5RIoMCObB6-Tp23ADj_dcd00pV2p0Gh8UjHBdIfXzm9I1zWuViessUtvBapy3_hWJAO.png?r=e59\",\n    \"https://occ-0-3092-2581.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABbEpsFiYWCUEB6_95Mf5IggdpqegCC_zRIn-zI6GYFN94vp5_tX9qNfNOFwNb6LH4Tng7ENAwvNxJ-_I2gePe-sdPO0E7k1FLUXF.png?r=9cc\",\n    \"https://occ-0-3092-2581.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABWbBDxHBii4kJ-J6A29-cKvhLPlsTDLbzNDVdXftJo16-oIKJ9OVVLP8zqUV1oJPFOAjLMegxfPK8KEmJjyDP_Ysow38gR_yzvrb.png?r=358\",\n]","// extracted by mini-css-extract-plugin\nexport default {\"AccessForm\":\"AccessForm_AccessForm__rMrwg\",\"Selected\":\"AccessForm_Selected__lnhrf\",\"Visible\":\"AccessForm_Visible__4cyxi\",\"AccessForm__ErrorMessage\":\"AccessForm_AccessForm__ErrorMessage__HMfyv\",\"AccessForm__AccessPlans\":\"AccessForm_AccessForm__AccessPlans__yVVsR\",\"AccessForm__AvatarsWrapper\":\"AccessForm_AccessForm__AvatarsWrapper__OKcfK\",\"AccessForm__inputGroup\":\"AccessForm_AccessForm__inputGroup__-EiD1\"};","import AccessForm from \"./AccessForm\";\nexport default AccessForm;","import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUserContext } from \"../../Context/UserContext/UserProvider\";\n\nimport { MdArrowDropDown } from \"react-icons/md\";\n\nimport { avatars } from \"./../../assets/avatars\";\n\nimport styles from \"./AccessForm.module.scss\";\n\nexport default function AccessForm({ sendData, endPoint }) {\n  const navigate = useNavigate();\n\n  const { fetchAllUsers } = useUserContext();\n\n  const accessPlans = [\"Premium\", \"Basic\", \"Poor\"];\n  const [avatarSelection, setAvatarSelection] = useState(\"\");\n  const [isDropdownOpen, setDropdownOpen] = useState(false);\n  const [planSelection, setPlanSelection] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState({isVisible: false, message: \"\"})\n\n  const [values, setValues] = useState(\n    endPoint !== \"login\"\n      ? {\n          avatar: \"https://cdn-icons-png.flaticon.com/512/843/843331.png?w=740\",\n        }\n      : {}\n  );\n\n  useEffect(() => {\n    fetchAllUsers();\n    //eslint-disable-next-line\n  }, []);\n\n  const onInputsChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setValues((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    fetchAccess(values, endPoint);\n  };\n\n  const fetchAccess = async (values, endPoint) => {\n    try {\n      const request = await fetch(\n        `https://edgemony-backend.herokuapp.com/${endPoint}`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(values),\n        }\n      );\n      const response = await request.json();\n      if (request.status !== 200 && request.status !== 201) {\n        throw new Error(response);\n      } else {\n        localStorage.setItem(\"JWT_accessToken\", response.accessToken);\n        localStorage.setItem(\"currentUser\", response.user.id);\n        navigate(\"/browse\");\n      }\n    } catch (e) {\n      setAlertMessage({isVisible: true, message: e});\n    }\n  };\n\n  const chooseAvatar = (e) => {\n    const id = e.target.id;\n    setAvatarSelection(id);\n    setValues((prev) => ({ ...prev, avatar: e.target.id }));\n  };\n\n  const choosePlan = (plan) => {\n    setPlanSelection(plan);\n    setValues((prev) => ({ ...prev, accessPlan: plan }));\n  };\n\n  return (\n    <form\n      autoComplete=\"false\"\n      onSubmit={submitForm}\n      className={styles.AccessForm}\n    >\n      {alertMessage.isVisible && <small className={styles.AccessForm__ErrorMessage}>{String(alertMessage.message)}</small>}\n      {endPoint === \"users\" ? (\n        <>\n\n          <div className={styles.AccessForm__AvatarsWrapper}>\n            <small>Scegli il tuo avatar!</small>\n            {avatars.map((avatar, index) => (\n              <img\n                id={avatar}\n                className={avatarSelection === avatar ? styles.Selected : null}\n                onClick={chooseAvatar}\n                key={index}\n                src={avatar}\n                alt={`Avatar ${index}`}\n              />\n            ))}\n          </div>\n\n          <div className={styles.AccessForm__AccessPlans}>\n            <span onClick={() => setDropdownOpen(!isDropdownOpen)}>\n              <small>Scegli il tuo piano di accesso!</small>\n              <MdArrowDropDown />\n            </span>\n            <div className={isDropdownOpen ? styles.Visible : null}>\n              {accessPlans.map((plan, index) => (\n                <div\n                  onClick={() => choosePlan(plan)}\n                  className={planSelection === plan ? styles.Selected : null}\n                  key={index}\n                >\n                  {plan}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className={styles.AccessForm__inputGroup}>\n            <label htmlFor=\"username\">Username</label>\n            <input\n              required\n              autoComplete=\"new-password\"\n              type=\"text\"\n              value={values.username || \"\"}\n              name=\"username\"\n              onChange={onInputsChange}\n              id=\"username\"\n            />\n          </div>\n        </>\n      ) : null}\n      <div className={styles.AccessForm__inputGroup}>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          required\n          autoComplete=\"new-password\"\n          type=\"email\"\n          value={values.email || \"\"}\n          name=\"email\"\n          onChange={onInputsChange}\n          id=\"email\"\n        />\n      </div>\n      <div className={styles.AccessForm__inputGroup}>\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          autoComplete=\"new-password\"\n          type=\"password\"\n          value={values.password || \"\"}\n          name=\"password\"\n          onChange={onInputsChange}\n          id=\"password\"\n        />\n      </div>\n      <div className={styles.AccessForm__inputGroup}>\n        {endPoint === \"users\" ? (\n          <input type=\"submit\" value=\"Sign Up\" />\n          ) : (\n            <input type=\"submit\" value=\"Sign In\" />\n            )}\n      </div>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"Overlay_Overlay__QvtbA\",\"OverlayNotVisible\":\"Overlay_OverlayNotVisible__2O-ro\"};","import Overlay from \"./Overlay\";\nexport default Overlay;","import styles from \"./Overlay.module.scss\"\n\nexport default function Overlay ({functionOnClick = ()=>{}, visibility=true}) {\n    return (\n        <div onClick={()=>functionOnClick()} className={visibility ? styles.Overlay : styles.OverlayNotVisible}></div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"Signin\":\"Signin_Signin__g3QIx\",\"Signin__redirect\":\"Signin_Signin__redirect__NmHjX\",\"Signin__RapidAccess\":\"Signin_Signin__RapidAccess__3Ct89\"};","import Signin from \"./Signin\";\nexport default Signin;","import AccessForm from \"../../components/AccessForm\";\nimport Overlay from \"../../components/Overlay\";\n\nimport styles from \"./Signin.module.scss\";\nimport logo from \"./../../logo.png\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport default function Signin() {\n  const navigate = useNavigate();\n  \n  const rapidAccess = () => {\n    localStorage.setItem(\"currentUser\", \"admin\");\n    navigate(\"/browse\");\n  }\n\n  return (\n    <div className={styles.Signin}>\n      <img src={logo} alt=\"Edgeflix\" />\n      <Overlay />\n      <h1>Sign In</h1>\n      <AccessForm endPoint=\"login\" />\n      <small className={styles.Signin__redirect}>\n        Non sei ancora registrato? <Link to=\"/signup\">Sign Up!</Link>\n      </small>\n      <button onClick={()=>rapidAccess()} className={styles.Signin__RapidAccess}>Accesso rapido</button>\n    </div>\n  );\n}\n"],"names":["avatars","sendData","endPoint","navigate","useNavigate","fetchAllUsers","useUserContext","useState","avatarSelection","setAvatarSelection","isDropdownOpen","setDropdownOpen","planSelection","setPlanSelection","isVisible","message","alertMessage","setAlertMessage","avatar","values","setValues","useEffect","onInputsChange","e","name","target","value","prev","fetchAccess","fetch","method","headers","body","JSON","stringify","request","json","response","status","Error","localStorage","setItem","accessToken","user","id","chooseAvatar","autoComplete","onSubmit","preventDefault","className","styles","String","map","index","onClick","src","alt","plan","accessPlan","choosePlan","htmlFor","required","type","username","onChange","email","password","functionOnClick","visibility","logo","Overlay","AccessForm","to"],"sourceRoot":""}